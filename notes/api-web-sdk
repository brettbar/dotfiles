api-web-sdk

# Web SDK API Proof of Concept

## Project Organization
• The whole project will be docker-ized, separated out into various 
  containers, to more closely mirror how the whole system would work in
  production.

• Four containers will be used
   1. The server api and backend
   2. The mongodb database
   3. The sdk with its worker system
   4. The test site and its dependencies

## File Overview
• main.go 
   •  Entry point to test the project
• index.html / index.js
   • Test site for sending user-generated events
• api.go
   • Provides endpoint for user-sent http-requests
   • Performs validation if necessary, parses out info from request, sends it 
     to backend
   • Once users post back has been processed sent and handled from the sdk, this
     file will handle sending the response for the original http request
• backend.go
   • Takes the request from the api, uses the unique user-identifier to check 
     with the database if that user already exists, or is a new user
   • Will receive user state from database if user already exists, otherwise it
     will create a new user in the database.
   • Performs CRUD with the database
   • Parses the request for the postback, sends the user-id and postback to 
     the sdk
• mongodb database
   • Stores a simple relation, with user-id as the primary key
   • Each user-id is associated with various fields, representing peristed sdk 
   • state
• sdk.go
   • Contains a series of workers, that are spun down by default
   • When a new post back and user-id are received from the backend:
      1.  sdk will check if that user-id is being handled by a worker already
      2.  if not it will spin up a new worker and assign it the user-id
      3.  Workers will run as go routines, 
         1. take the user-id’s postback that it is assigned, 
         2. build the payload and send to kochava’s servers
         3. receive the response from kochava
         4. prepare the response body
         5. send the response payload back to the api.go to be sent as a 
            response to the users original request


